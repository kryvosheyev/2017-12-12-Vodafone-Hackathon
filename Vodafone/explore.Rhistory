hour<-sapply(time_split,"[",2)
hour<-as.integer(hour)
data<-cbind(data[c(1:2)],data[5],data[c(11:12)],data[c(3:4)],data[10],data[c(13:17)],data[c(8:9)],data[c(6:7)],hour,data[c(18:22)])
barplot(sort(table(data$tar_A),decreasing=TRUE),horiz=TRUE,las=1,cex.names=0.7,col="red",main="Tariff plans of consumers A",xlab="Frequency",ylab="tar_A")
barplot(sort(table(data$tar_A)[table(data$tar_A)>=1000],decreasing=TRUE),horiz=TRUE,las=1,cex.names=0.7,col="red",main="Tariff plans of consumers A with Frequency >= 1000",xlab="Frequency",ylab="tar_A")
barplot(sort(table(data$tar_A)[table(data$tar_A)<500],decreasing=TRUE),horiz=TRUE,las=1,col="red",main="Tariff plans of consumers A with Frequency < 500",xlab="Frequency")
#table_tar_A<-table(data$tar_A)
no_par<-par(no.readonly=TRUE)
par(mar=c(10,4,4,2))
barplot(sort(table(data$cat_B),decreasing=TRUE),las=2,col="red",cex.names=0.8,main="Categories of B",ylab="Frequency")
par(mar=c(5,15,4,2))
barplot(sort(table(data$cat_B)[table(data$cat_B)>=10],decreasing=TRUE),las=1,col="red",horiz=TRUE,main="Categories of B with Frequency >= 10",xlab="Frequency")
#table_cat_B<-table(data$cat_B)
par(mar=c(5,6,4,2))
barplot(sort(table(data$event),decreasing=TRUE),las=1,col="red",main="Events",xlab="Event")
barplot(sort(table(data$event)[table(data$event)<100000],decreasing=TRUE),las=1,col="red",main="Events with Frequency < 5000",xlab="Event",ylab="Frequency")
par(no_par)
#data_network_ser<-data[data$event=="network_ser",]
#data_service_fee<-data[data$event=="service_fee",]
#data_service_add<-data[data$event=="service_add",]
#data_service_del<-data[data$event=="service_del",]
#data_account_ref<-data[data$event=="account_ref",]
#data_blocking<-data[data$event=="blocking",]
#data_unblocking<-data[data$event=="unblocking",]
barplot(sort(table(data_service_add$event_sub)[table(data_service_add$event_sub)>0],decreasing=TRUE),las=2,cex.names=0.5,col="red",main="Subevents of Service_add",ylab="Frequency")
barplot(sort(table(data_service_add$event_sub)[table(data_service_add$event_sub)>=10],decreasing=TRUE),las=2,cex.names=0.8,col="red",main="Subevents of Service_add with Frequency >= 10",ylab="Frequency")
barplot(sort(table(data_service_fee$event_sub)[table(data_service_fee$event_sub)>0],decreasing=TRUE),horiz=TRUE,las=1,cex.names=0.7,col="red",main="Subevents of Service_fee",xlab="Frequency")
barplot(sort(table(data_service_fee$event_sub)[table(data_service_fee$event_sub)>=10],decreasing=TRUE),horiz=TRUE,las=1,col="red",main="Subevents of Service_fee with Frequency >= 10",xlab="Frequency")
barplot(sort(table(data_network_ser$event_sub)[table(data_network_ser$event_sub)>0],decreasing=TRUE),horiz=TRUE,las=1,col="red",main="Subevents of Network_ser",xlab="Frequency")
barplot(sort(table(data_service_del$event_sub)[table(data_service_del$event_sub)>0],decreasing=TRUE),las=2,col="red",cex.names=0.5,main="Subevents of Service_del",ylab="Frequency")
barplot(sort(table(data_service_del$event_sub)[table(data_service_del$event_sub)>=10],decreasing=TRUE),las=2,col="red",cex.names=0.8,main="Subevents of Service_del with Frequency >= 10",ylab="Frequency")
barplot(sort(table(data_blocking$event_sub)[table(data_blocking$event_sub)>0],decreasing=TRUE),las=1,col="red",main="Subevents of Blocking/Unblocking",ylab="Frequency")
boxplot(data$cost[data$cost>0],main="Cost > 0",ylab="hrn.")
cost<-boxplot.stats(data$cost[data$cost>0])
hist(data$cost[data$cost>0 & data$cost<9],col="red",main="0 < Cost < 9",xlab="hrn.")
#data_dir<-data[!is.na(data$direction),]
boxplot(data_dir$cost[data_dir$cost>0],main="0 < Cost <= 100",ylab="hrn.")
cost_100<-boxplot.stats(data_dir$cost[data_dir$cost>0])
boxplot(data$call_min[data$call_min>0],main="Call > 0",ylab="min.")
call<-boxplot.stats(data$call_min[data$call_min>0])
hist(data$call_min[data$call_min>0 & data$call_min<=5],col="red",main="0 < Call <= 5",xlab="hrn.")
hist(data$call_min[data$call_min>0 & data$call_min<=30],breaks=c(0:30),col="red",main="0 < Call <= 30",xlab="hrn.")
boxplot(data$data_mb[data$data_mb>0],main="Data",ylab="MB")
data_mb<-boxplot.stats(data$data_mb[data$data_mb>0])
hist(data$data_mb[data$data_mb>0 & data$data_mb<=1],col="red",main="0 < Data <= 1",xlab="MB")
boxplot(data$accum[data$accum>0],main="Accum",ylab="hrn.")
accum<-boxplot.stats(data$accum[data$accum>0])
hist(data$accum[data$accum>0],col="red",main="Accum > 0",xlab="hrn.")
boxplot(data$LAT,main="Latitude")
boxplot(data$LON,main="Longitude")
latitude<-boxplot.stats(data$LAT)
longitude<-boxplot.stats(data$LON)
hist(data$LAT,col="red",main="Latitude")
hist(data$LON,col="red",main="Longitude")
barplot(sort(table(data$price),decreasing=TRUE),las=1,col="red",main="Phone Prices",ylab="Frequency")
barplot(table(data$hour),las=1,col="red",main="Call Hours",xlab="hour",ylab="Frequency")
barplot(table(data$date),las=2,col="red",cex.names=0.8,main="Call Dates",ylab="Frequency")
interests<-cbind(table(data$int_1),table(data$int_2),table(data$int_3),table(data$int_4),table(data$int_5))
barplot(interests,main="Groups of Interests",beside=TRUE,col=rainbow(14),legend=rownames(interests),xlab="Interest 1, Interest 2, Interest 3, Interest 4, Interest 5",ylab="Frequency")
par(mar=c(5,10,4,2))
barplot(sort(table(int_all),decreasing=TRUE),main="All Interests",col=rainbow(14),horiz=TRUE,las=1,xlab="Frequency")
par(no_par)
data_aggr<-aggregate(data[c(8:11)],by=list(num_a=data$num_A),sum,na.rm=TRUE)
data_06<-data[data$date>=as.Date("2017-06-01") & data$date<=as.Date("2017-06-30"),]
data_07<-data[data$date>=as.Date("2017-07-01") & data$date<=as.Date("2017-07-31"),]
data_08<-data[data$date>=as.Date("2017-08-01") & data$date<=as.Date("2017-08-31"),]
data_aggr_06<-aggregate(data_06[c(8:11)],by=list(num_a=data_06$num_A),sum,na.rm=TRUE)
data_aggr_07<-aggregate(data_07[c(8:11)],by=list(num_a=data_07$num_A),sum,na.rm=TRUE)
data_aggr_08<-aggregate(data_08[c(8:11)],by=list(num_a=data_08$num_A),sum,na.rm=TRUE)
#data.net<-data[data$event=="network_ser",]
library(reshape2)
data.net.cast<-dcast(data.net,num_A~event_sub)
data.net.cast_06<-dcast(data.net[data.net$date>="2017-06-01" & data.net$date<="2017-06-30",],num_A~event_sub)
data.net.cast_07<-dcast(data.net[data.net$date>="2017-07-01" & data.net$date<="2017-07-31",],num_A~event_sub)
data.net.cast_08<-dcast(data.net[data.net$date>="2017-08-01" & data.net$date<="2017-08-31",],num_A~event_sub)