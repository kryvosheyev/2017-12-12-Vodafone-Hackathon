train_val_fact<-train_val_fact[-1]
train_val_fact$target<-factor(train_val_fact$target)
model_rul_tr_val<-JRip(target~.,data=train_val_fact)
library(bartMachine)
?bartMachine
??bartMachine
library(randomForest)
?randomForest
model_RF50<-randomForest(target~.,data=train,ntree=50,mtry=4)
model_RF50<-randomForest(target~.,data=train_fact,ntree=50,mtry=4)
pred_RF50<-predict(model_RF50,valid_fact,type="prob")
predoct_RF50<-pred_RF50[,2]
predict_RF50<-pred_RF50[,2]
library(ROCR)
auc_RF50<-roc.auc(predict_RF50,valid_fact$target)
train$target<-factor(train$target)
valid$target<-factor(valid$target)
model_RF50num<-randomForest(target~.,data=train,ntree=50,mtry=4)
pred_RF50num<-predict(model_RF50num,valid,type="prob")
predict_RF50num<-pred_RF50num[,2]
auc_RF50num<-roc.auc(predict_RF50num,valid$target)
library(caret)
set.seed(314)
train$target<-as.integer(train$target)
train$target<-train$target-1
valid$target<-as.integer(valid$target)
valid$target<-valid$target-1
train_log<-train
valid_log<-valid
train_log$cost_refill<-log(1+train$cost_refill)
valid_log$cost_refill<-log(1+valid$cost_refill)
train_log$expense<-log(1+train$expense)
valid_log$expense<-log(1+valid$expense)
train_log$income_minutes<-log(1+train$income_minutes)
valid_log$income_minutes<-log(1+valid$income_minutes)
train_log$outcome_minutes<-log(1+train$outcome_minutes)
valid_log$outcome_minutes<-log(1+valid$outcome_minutes)
train_log$voda_minutes<-log(1+train$voda_minutes)
valid_log$voda_minutes<-log(1+valid$voda_minutes)
train_log$nonvoda_minutes<-log(1+train$nonvoda_minutes)
valid_log$nonvoda_minutes<-log(1+valid$nonvoda_minutes)
train_log$nonvoda_sms<-log(1+train$nonvoda_sms)
valid_log$nonvoda_sms<-log(1+valid$nonvoda_sms)
train_log$voda_sms<-log(1+train$voda_sms)
valid_log$voda_sms<-log(1+valid$voda_sms)
train_log$inet_mb<-log(1+train$inet_mb)
valid_log$inet_mb<-log(1+valid$inet_mb)
model_logreg3<-glm(target~.,data=train_log,family=binomial())
pred_logreg3<-predict(model_logreg3,valid_log[-13])
auc_logreg3<-roc.auc(pred_logreg3,valid$target)
hist(train_log$cost)
train_log$cost<-log(1+train$cost)
valid_log$cost<-log(1+valid$cost)
model_logreg3<-glm(target~.,data=train_log,family=binomial())
pred_logreg3<-predict(model_logreg3,valid_log[-13])
auc_logreg3<-roc.auc(pred_logreg3,valid$target)
pred_logreg3<-predict(model_logreg3,valid_log[-13],type="prob")
pred_logreg3<-predict(model_logreg3,valid_log[-13],type="response")
auc_logreg3<-roc.auc(pred_logreg3,valid$target)
hist(train_log$cost)
hist(train_log$cost_refill)
hist(train_log$expense)
pred_logreg3a<-predict(model_logreg3,train_log[-13],type="response")
auc_logreg3a<-roc.auc(pred_logreg3a,train_log$target)
data.full<-data.full[-c(19,20)]
data.full<-merge(data.full,flag_target,by="hash_number_A")
hist(data.full$neg_internet)
data.full<-data.full[-20]
data.full_log<-data.full[-1]
data.full_log$cost<-log(data.full$cost+1)
data.full_log$cost_refill<-log(data.full$cost_refill+1)
data.full_log$expense<-log(data.full$expense+1)
data.full_log$income_minutes<-log(data.full$income_minutes+1)
data.full_log$outcome_minutes<-log(data.full$outcome_minutes+1)
data.full_log$voda_minutes<-log(data.full$voda_minutes+1)
data.full_log$nonvoda_minutes<-log(data.full$nonvoda_minutes+1)
data.full_log$nonvoda_sms<-log(data.full$nonvoda_sms+1)
data.full_log$voda_sms<-log(data.full$voda_sms+1)
data.full_log$inet_mb<-log(data.full$inet_mb+1)
hist(data.full_log$cost_refill)
hist(data.full_log$cost)
set.seed(314)
train_index<-sample(7990,6392)
train_full<-data.full_log[train_index,]
valid_full<-data.full_log[-train_index,]
model_logreg4<-glm(target~.,data=train_full,family=binomial())
pred_logreg4<-predict(model_logreg4,valid_full[-19],type="response")
auc_logreg4<-roc.auc(pred_logreg4,valid_full$target)
set.seed(862)
train_index4a<-sample(7990,6392)
train_full4a<-data.full_log[train_index4a,]
valid_full4a<-data.full_log[-train_index4a,]
model_logreg4a<-glm(target~.,data=train_full4a,family=binomial())
pred_logreg4a<-predict(model_logreg4a,valid_full4a[-19],type="response")
auc_logreg4a<-roc.auc(pred_logreg4a,valid_full4a$target)
library(MASS)
model_logreg4b<-stepAIC(model_logreg4a,direction="backward")
pred_logreg4b<-predict(model_logreg4b,valid_full4a[-19],type="response")
auc_logreg4b<-roc.auc(pred_logreg4b,valid_full4a$target)
auc_logreg4b
